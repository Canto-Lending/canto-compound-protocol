
Test "Check Name"
    Comp Deploy Geoff
    Assert Equal (Comp Name) "Compound"

Test "Check Symbol"
    Comp Deploy Geoff
    Assert Equal (Comp Symbol) "COMP"

Test "Check Decimals"
    Comp Deploy Geoff
    Assert Equal (Comp Decimals) 18

Test "Check Total Supply"
    Comp Deploy Geoff
    Assert Equal (Comp TotalSupply) 10000000e18

Test "Check account receives Total Supply after deploy and emits Transfer event"
    Comp Deploy Geoff
    Assert Equal (Comp TokenBalance Geoff) 10000000e18
    Assert Log Transfer (from (Address Zero)) (to (Address Geoff)) (amount "10000000000000000000000000")

Test "Check approve sets correct approval and emits Approval event"
    Comp Deploy Geoff
    From Geoff (Comp Approve Jared 10)
    Assert Equal (Comp Allowance Geoff Jared) 10
    Assert Log Approval (owner (Address Geoff)) (spender (Address Jared)) (amount "10")

Test "Check approve with bad allowance reverts"
    Comp Deploy Geoff
    AllowFailures
    From Geoff (Comp Approve Jared 1e70)
    Assert Revert "revert Comp::approve: amount exceeds 96 bits"

Test "Check transfer updates balances correctly, emits Transfer event, and returns true"
    Comp Deploy Geoff
    From Geoff (Comp Transfer Jared 10)
    Assert Equal (Comp TokenBalance Geoff) 9999999999999999999999990
    Assert Equal (Comp TokenBalance Jared) 10
    Assert Log Transfer (from (Address Geoff)) (to (Address Jared)) (amount "10")

Test "Check self-transfer updates balances correctly, emits Transfer event, and returns true"
    Comp Deploy Geoff
    Expect Changes (Comp TokenBalance Geoff) Zero
    From Geoff (Comp Transfer Geoff 10)
    Assert Log Transfer (from (Address Geoff)) (to (Address Geoff)) (amount "10")
    Expect Changes (Comp TokenBalance Geoff) Zero
    From Geoff (Comp Transfer Geoff 0)
    Assert Log Transfer (from (Address Geoff)) (to (Address Geoff)) (amount "0")

Test "Check transferFrom with unlimited allowance updates balances correctly, emits Transfer event, and returns true"
    Comp Deploy Geoff
    From Geoff (Comp Approve Jared UInt256Max)
    From Jared (Comp TransferFrom Geoff Jared 10)
    Assert Equal (Comp TokenBalance Geoff) 9999999999999999999999990
    Assert Equal (Comp TokenBalance Jared) 10
    Assert Equal (Comp Allowance Geoff Jared) UInt96Max
    Assert Log Transfer (from (Address Geoff)) (to (Address Jared)) (amount "10")

Test "Check transferFrom with unlimited allowance updates balances correctly, emits Transfer event, and returns true"
    Comp Deploy Geoff
    From Geoff (Comp Approve Jared UInt96Max)
    From Jared (Comp TransferFrom Geoff Jared 10)
    Assert Equal (Comp TokenBalance Geoff) 9999999999999999999999990
    Assert Equal (Comp TokenBalance Jared) 10
    Assert Equal (Comp Allowance Geoff Jared) UInt96Max
    Assert Log Transfer (from (Address Geoff)) (to (Address Jared)) (amount "10")

Test "Check transferFrom with allowance updates balances correctly, emits Transfer event, and returns true"
    Comp Deploy Geoff
    From Geoff (Comp Approve Jared 10)
    From Jared (Comp TransferFrom Geoff Jared 9)
    Assert Equal (Comp TokenBalance Geoff) 9999999999999999999999991
    Assert Equal (Comp TokenBalance Jared) 9
    Assert Equal (Comp Allowance Geoff Jared) 1
    Assert Log Transfer (from (Address Geoff)) (to (Address Jared)) (amount "9")
    Assert Log Approval (owner (Address Geoff)) (spender (Address Jared)) (amount "1")

Test "Check transferFrom reverts with not sufficient allowance"
    Comp Deploy Geoff
    From Geoff (Comp Approve Jared 10)
    AllowFailures
    From Jared (Comp TransferFrom Geoff Jared 11)
    Assert Revert "revert Comp::transferFrom: transfer amount exceeds spender allowance"

Test "Check transfer reverts when transferring too much"
    Comp Deploy Geoff
    AllowFailures
    From Geoff (Comp Transfer Jared 10000001e18)
    Assert Revert "revert Comp::_transferTokens: transfer amount exceeds balance"

Test "Check transfer reverts when transferring to address 0"
    Comp Deploy Geoff
    AllowFailures
    From Geoff (Comp Transfer (Address Zero) 10000000e18)
    Assert Revert "revert Comp::_transferTokens: cannot transfer to the zero address"

